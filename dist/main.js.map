{"version":3,"file":"main.js","mappings":"yBACkBA,MAAMC,KAAKC,SAASC,iBCG3B,YDFDC,SAASC,IACyB,OAApCC,aAAaC,QAAQF,EAAOG,KACfC,KAAKC,MAAMJ,aAAaC,QAAQF,EAAOG,KAC/CJ,SAASO,IACdN,EAAOO,SAAS,GAAGC,mBACjB,YACA,qFAC+CF,6GAGhD,GAEL,ICRW,ICNA,MACbG,WAAAA,CAAYC,GACVC,KAAKD,QAAUA,EACfC,KAAKC,QAASD,KAAKC,QAAQC,KAAKF,MAChCA,KAAKG,WAAaH,KAAKG,WAAWD,KAAKF,MACvCA,KAAKI,cAAgBJ,KAAKI,cAAcF,KAAKF,MAC7CA,KAAKK,WAAaL,KAAKK,WAAWH,KAAKF,MACvCA,KAAKD,QAAQO,iBAAiB,QAASN,KAAKC,SAC5CD,KAAKD,QAAQO,iBAAiB,QAASN,KAAKG,YAC5CH,KAAKD,QAAQO,iBAAiB,QAASN,KAAKI,eAC5CJ,KAAKD,QAAQO,iBAAiB,QAASN,KAAKK,WAC9C,CAEDJ,OAAAA,CAAQM,GACLA,EAAEC,iBACID,EAAEE,OAAOC,UAAUC,SAAS,qBAClCJ,EAAEE,OAAOG,cAAcf,mBACrB,YACA,8YAQJ,CAEAM,UAAAA,CAAWI,GACTA,EAAEC,iBACF,IAAIK,EAAQ,GACZ,IAAMN,EAAEE,OAAOC,UAAUC,SAAS,8BAAgC,OAClE,MAAMG,EAAcP,EAAEE,OAAOG,cAAcA,cAAchB,SAAS,GAAGD,MAC/DoB,EAAMR,EAAEE,OAAOG,cAAcA,cAAcA,cAAcpB,GAErC,OADAF,aAAaC,QAAQwB,IAG7CF,EADcpB,KAAKC,MAAMJ,aAAaC,QAAQwB,IAE9CF,EAAMG,KAAKF,GACXxB,aAAa2B,QAAQF,EAAKtB,KAAKyB,UAAUL,MAEzCA,EAAMG,KAAKF,GACXxB,aAAa2B,QAAQF,EAAKtB,KAAKyB,UAAUL,KAE3C,MAAMM,EAAOnB,KAAKD,QAAQqB,cAAc,QACxCD,EAAKP,cAAchB,SAAS,GAAGC,mBAC7B,YACA,6EAC2CiB,8FAI7CK,EAAKE,QACP,CAEAjB,aAAAA,CAAcG,GACZA,EAAEC,iBACID,EAAEE,OAAOC,UAAUC,SAAS,8BACrBX,KAAKD,QAAQqB,cAAc,QACnCC,QACP,CAEAhB,UAAAA,CAAWE,GACTA,EAAEC,iBACF,IAAIK,EAAQ,GACZ,IAAMN,EAAEE,OAAOC,UAAUC,SAAS,sBAAwB,OAC1D,MAAMI,EAAMR,EAAEE,OAAOG,cAAcA,cAAcA,cAAcpB,GACzD8B,EAASf,EAAEE,OAAOG,cAAcA,cAEtCC,EADepB,KAAKC,MAAMJ,aAAaC,QAAQwB,IAE/C,MAAMQ,EAAQvC,MAAMC,KAAKqC,EAAO1B,UAAU4B,QAAQjB,EAAEE,OAAOG,eAC3DC,EAAMY,OAAOF,EAAO,GACpBjC,aAAa2B,QAAQF,EAAKtB,KAAKyB,UAAUL,IACzCN,EAAEE,OAAOG,cAAcS,QACzB,GDpEwB,YAEb,IERE,MACbvB,WAAAA,CAAYC,GACVC,KAAKD,QAAUA,EACfC,KAAK0B,cACL1B,KAAK2B,YAAc3B,KAAK2B,YAAYzB,KAAKF,MACzCA,KAAK4B,YAAc5B,KAAK4B,YAAY1B,KAAKF,MACzCA,KAAK6B,UAAY7B,KAAK6B,UAAU3B,KAAKF,MACrCA,KAAKD,QAAQO,iBAAiB,YAAaN,KAAK2B,YAClD,CAEAC,WAAAA,CAAYrB,GACJA,EAAEE,OAAOC,UAAUC,SAAS,iBAClCX,KAAK0B,cAAcI,MAAMC,IAAM,GAAGxB,EAAEyB,YACpChC,KAAK0B,cAAcI,MAAMG,KAAO,GAAG1B,EAAE2B,YACvC,CAEAL,SAAAA,CAAUtB,GACR,MAAM4B,EAAc5B,EAAEE,OACtB,IAAII,EAAQ,GACZ,GAAIsB,EAAYzB,UAAUC,SAAS,qBAAsB,CACvDwB,EAAYvB,cAAcwB,sBAAsB,cAAepC,KAAK0B,eACpE,MAAMX,EAAMf,KAAK0B,cAAcd,cAAcA,cAAcpB,GACrD6C,EAAOrC,KAAK0B,cAAc9B,SAAS,GAAGkB,YACtCQ,EAAStB,KAAK0B,cAAcd,cAElCC,EADepB,KAAKC,MAAMJ,aAAaC,QAAQwB,IAE/C,MAAMQ,EAAQvC,MAAMC,KAAKqC,EAAO1B,UAAU4B,QAAQxB,KAAK0B,eACvDb,EAAMY,OAAOF,EAAO,EAAGc,GACvB/C,aAAa2B,QAAQF,EAAKtB,KAAKyB,UAAUL,GAC3C,CACA,GAAIsB,EAAYzB,UAAUC,SAAS,WAA2D,IAA9CwB,EAAYvC,SAAS,GAAG0C,WAAWC,OAAc,CAC/FJ,EAAYvC,SAAS,GAAGwC,sBAAsB,aAAcpC,KAAK0B,eACjE,MAAMX,EAAMf,KAAK0B,cAAcd,cAAcA,cAAcpB,GACrD6C,EAAOrC,KAAK0B,cAAc9B,SAAS,GAAGkB,YAC5CD,EAAMG,KAAKqB,GACX/C,aAAa2B,QAAQF,EAAKtB,KAAKyB,UAAUL,GAC3C,CACAb,KAAK0B,cAAchB,UAAUW,OAAO,WACpCrB,KAAK0B,mBAAgBc,EACrBxC,KAAKD,QAAQ0C,oBAAoB,UAAWzC,KAAK6B,WACjD7B,KAAKD,QAAQ0C,oBAAoB,YAAazC,KAAK4B,YACrD,CAEAD,WAAAA,CAAYpB,GACVA,EAAEC,iBACF,IAAIK,EAAQ,GACZ,IAAMN,EAAEE,OAAOC,UAAUC,SAAS,qBAAuB,OACzDX,KAAK0B,cAAgBnB,EAAEE,OAAOG,cAC9B,MAAMG,EAAMf,KAAK0B,cAAcd,cAAcA,cAAcpB,GACrD8B,EAAStB,KAAK0B,cAAcd,cAElCC,EADepB,KAAKC,MAAMJ,aAAaC,QAAQwB,IAE/C,MAAMQ,EAAQvC,MAAMC,KAAKqC,EAAO1B,UAAU4B,QAAQxB,KAAK0B,eACvDb,EAAMY,OAAOF,EAAO,GACpBjC,aAAa2B,QAAQF,EAAKtB,KAAKyB,UAAUL,IACzCb,KAAK0B,cAAchB,UAAUgC,IAAI,WACjC1C,KAAKD,QAAQO,iBAAiB,UAAWN,KAAK6B,WAC9C7B,KAAKD,QAAQO,iBAAiB,YAAaN,KAAK4B,YAClD,GFlDoB,W","sources":["webpack://trello/./src/js/locStorage.js","webpack://trello/./src/js/app.js","webpack://trello/./src/js/column.js","webpack://trello/./src/js/card.js"],"sourcesContent":["export default function locStorage(element) {\n  const columns = Array.from(document.querySelectorAll(element));\n  columns.forEach((column) => {\n    if (localStorage.getItem(column.id) !== null) {\n      const values = JSON.parse(localStorage.getItem(column.id));\n      values.forEach((value) => {\n        column.children[1].insertAdjacentHTML(\n          'beforeEnd',\n          `<div class=\"colomn-card\">\n                        <div class=\"colomn-card__text\">${value}</div>\n                        <div class=\"colomn-card__close\">&#10006</div>\n                    </div>`,\n        );\n      });\n    }\n  });\n}\n","import Card from './card';\nimport Column from './column';\nimport locStorage from './locStorage';\n// localStorage.clear()\nlocStorage('.column');\n\nconst column = new Column('.columns');\n\nconst card = new Card('.columns');\n","export default class Column {\n  constructor(element) {\n    this.element = element;\n    this.newCard= this.newCard.bind(this);\n    this.addNewCard = this.addNewCard.bind(this);\n    this.deleteNewCard = this.deleteNewCard.bind(this);\n    this.deleteCard = this.deleteCard.bind(this);\n    this.element.addEventListener('click', this.newCard);\n    this.element.addEventListener('click', this.addNewCard);\n    this.element.addEventListener('click', this.deleteNewCard);\n    this.element.addEventListener('click', this.deleteCard);\n  }\n\n newCard(e) {\n    e.preventDefault();\n    if (!(e.target.classList.contains('column-add__card'))) return;\n    e.target.parentElement.insertAdjacentHTML(\n      'beforeEnd',\n      ` <form class='card-new'>\n            <textarea class='card-new__text' id=\"name\" type='text' required placeholder='Enter a title for this card...'></textarea>\n            <div class='card-new-container'>\n                <button class='card-new-container__button'>Add Card</button>\n                <div class=\"card-new-container__close\">&#10006;</div>\n            </div>\n         </form>`,\n    );\n  }\n\n  addNewCard(e) {\n    e.preventDefault();\n    let array = [];\n    if (!(e.target.classList.contains('card-new-container__button'))) return;\n    const textContent = e.target.parentElement.parentElement.children[0].value;\n    const key = e.target.parentElement.parentElement.parentElement.id;\n    const valueLocalStorage = localStorage.getItem(key);\n    if (valueLocalStorage !== null) {\n      const value = JSON.parse(localStorage.getItem(key));\n      array = value;\n      array.push(textContent);\n      localStorage.setItem(key, JSON.stringify(array));\n    } else {\n      array.push(textContent);\n      localStorage.setItem(key, JSON.stringify(array));\n    }\n    const form = this.element.querySelector('form');\n    form.parentElement.children[1].insertAdjacentHTML(\n      'beforeEnd',\n      `<div class=\"colomn-card\">\n                <div class=\"colomn-card__text\">${textContent}</div>\n                <div class=\"colomn-card__close\">&#10006</div>\n            </div>`,\n    );\n    form.remove();\n  }\n\n  deleteNewCard(e) {\n    e.preventDefault();\n    if (!(e.target.classList.contains('card-new-container__close'))) return;\n    const form = this.element.querySelector('form');\n    form.remove();\n  }\n\n  deleteCard(e) {\n    e.preventDefault();\n    let array = [];\n    if (!(e.target.classList.contains('colomn-card__close'))) return;\n    const key = e.target.parentElement.parentElement.parentElement.id;\n    const parent = e.target.parentElement.parentElement;\n    const values = JSON.parse(localStorage.getItem(key));\n    array = values;\n    const index = Array.from(parent.children).indexOf(e.target.parentElement);\n    array.splice(index, 1);\n    localStorage.setItem(key, JSON.stringify(array));\n    e.target.parentElement.remove();\n  }\n}\n","export default class Card {\n  constructor(element) {\n    this.element = element;\n    this.actualElement;\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseOver = this.onMouseOver.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.element.addEventListener('mousedown', this.onMouseDown);\n  }\n\n  onMouseOver(e) {\n    if (!(e.target.classList.contains('colomn-card'))) return;\n    this.actualElement.style.top = `${e.clientY}px`;\n    this.actualElement.style.left = `${e.clientX}px`;\n  }\n\n  onMouseUp(e) {\n    const mouseUpItem = e.target;\n    let array = [];\n    if (mouseUpItem.classList.contains('colomn-card__text')) {\n      mouseUpItem.parentElement.insertAdjacentElement('beforebegin', this.actualElement);\n      const key = this.actualElement.parentElement.parentElement.id;\n      const text = this.actualElement.children[0].textContent;\n      const parent = this.actualElement.parentElement;\n      const values = JSON.parse(localStorage.getItem(key));\n      array = values;\n      const index = Array.from(parent.children).indexOf(this.actualElement);\n      array.splice(index, 0, text);\n      localStorage.setItem(key, JSON.stringify(array));\n    }\n    if (mouseUpItem.classList.contains('column') && mouseUpItem.children[1].childNodes.length === 0) {\n      mouseUpItem.children[1].insertAdjacentElement('afterbegin', this.actualElement);\n      const key = this.actualElement.parentElement.parentElement.id;\n      const text = this.actualElement.children[0].textContent;\n      array.push(text);\n      localStorage.setItem(key, JSON.stringify(array));\n    }\n    this.actualElement.classList.remove('dragged');\n    this.actualElement = undefined;\n    this.element.removeEventListener('mouseup', this.onMouseUp);\n    this.element.removeEventListener('mouseover', this.onMouseOver);\n  }\n\n  onMouseDown(e) {\n    e.preventDefault();\n    let array = [];\n    if (!(e.target.classList.contains('colomn-card__text'))) return;\n    this.actualElement = e.target.parentElement;\n    const key = this.actualElement.parentElement.parentElement.id;\n    const parent = this.actualElement.parentElement;\n    const values = JSON.parse(localStorage.getItem(key));\n    array = values;\n    const index = Array.from(parent.children).indexOf(this.actualElement);\n    array.splice(index, 1);\n    localStorage.setItem(key, JSON.stringify(array));\n    this.actualElement.classList.add('dragged');\n    this.element.addEventListener('mouseup', this.onMouseUp);\n    this.element.addEventListener('mouseover', this.onMouseOver);\n  }\n}\n"],"names":["Array","from","document","querySelectorAll","forEach","column","localStorage","getItem","id","JSON","parse","value","children","insertAdjacentHTML","constructor","element","this","newCard","bind","addNewCard","deleteNewCard","deleteCard","addEventListener","e","preventDefault","target","classList","contains","parentElement","array","textContent","key","push","setItem","stringify","form","querySelector","remove","parent","index","indexOf","splice","actualElement","onMouseDown","onMouseOver","onMouseUp","style","top","clientY","left","clientX","mouseUpItem","insertAdjacentElement","text","childNodes","length","undefined","removeEventListener","add"],"sourceRoot":""}